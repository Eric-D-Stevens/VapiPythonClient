# coding: utf-8

"""
    Vapi API

    API for building voice assistants  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class VoiceLibrary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'provider': 'object',
        'provider_id': 'str',
        'slug': 'str',
        'name': 'str',
        'language': 'str',
        'language_code': 'str',
        'model': 'str',
        'supported_models': 'str',
        'gender': 'str',
        'accent': 'str',
        'preview_url': 'str',
        'description': 'str',
        'credential_id': 'str',
        'id': 'str',
        'org_id': 'str',
        'is_public': 'bool',
        'is_deleted': 'bool',
        'created_at': 'datetime',
        'updated_at': 'datetime'
    }

    attribute_map = {
        'provider': 'provider',
        'provider_id': 'providerId',
        'slug': 'slug',
        'name': 'name',
        'language': 'language',
        'language_code': 'languageCode',
        'model': 'model',
        'supported_models': 'supportedModels',
        'gender': 'gender',
        'accent': 'accent',
        'preview_url': 'previewUrl',
        'description': 'description',
        'credential_id': 'credentialId',
        'id': 'id',
        'org_id': 'orgId',
        'is_public': 'isPublic',
        'is_deleted': 'isDeleted',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt'
    }

    def __init__(self, provider=None, provider_id=None, slug=None, name=None, language=None, language_code=None, model=None, supported_models=None, gender=None, accent=None, preview_url=None, description=None, credential_id=None, id=None, org_id=None, is_public=None, is_deleted=None, created_at=None, updated_at=None):  # noqa: E501
        """VoiceLibrary - a model defined in Swagger"""  # noqa: E501
        self._provider = None
        self._provider_id = None
        self._slug = None
        self._name = None
        self._language = None
        self._language_code = None
        self._model = None
        self._supported_models = None
        self._gender = None
        self._accent = None
        self._preview_url = None
        self._description = None
        self._credential_id = None
        self._id = None
        self._org_id = None
        self._is_public = None
        self._is_deleted = None
        self._created_at = None
        self._updated_at = None
        self.discriminator = None
        if provider is not None:
            self.provider = provider
        if provider_id is not None:
            self.provider_id = provider_id
        if slug is not None:
            self.slug = slug
        if name is not None:
            self.name = name
        if language is not None:
            self.language = language
        if language_code is not None:
            self.language_code = language_code
        if model is not None:
            self.model = model
        if supported_models is not None:
            self.supported_models = supported_models
        if gender is not None:
            self.gender = gender
        if accent is not None:
            self.accent = accent
        if preview_url is not None:
            self.preview_url = preview_url
        if description is not None:
            self.description = description
        if credential_id is not None:
            self.credential_id = credential_id
        self.id = id
        self.org_id = org_id
        self.is_public = is_public
        self.is_deleted = is_deleted
        self.created_at = created_at
        self.updated_at = updated_at

    @property
    def provider(self):
        """Gets the provider of this VoiceLibrary.  # noqa: E501

        This is the voice provider that will be used.  # noqa: E501

        :return: The provider of this VoiceLibrary.  # noqa: E501
        :rtype: object
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this VoiceLibrary.

        This is the voice provider that will be used.  # noqa: E501

        :param provider: The provider of this VoiceLibrary.  # noqa: E501
        :type: object
        """

        self._provider = provider

    @property
    def provider_id(self):
        """Gets the provider_id of this VoiceLibrary.  # noqa: E501

        The ID of the voice provided by the provider.  # noqa: E501

        :return: The provider_id of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this VoiceLibrary.

        The ID of the voice provided by the provider.  # noqa: E501

        :param provider_id: The provider_id of this VoiceLibrary.  # noqa: E501
        :type: str
        """

        self._provider_id = provider_id

    @property
    def slug(self):
        """Gets the slug of this VoiceLibrary.  # noqa: E501

        The unique slug of the voice.  # noqa: E501

        :return: The slug of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this VoiceLibrary.

        The unique slug of the voice.  # noqa: E501

        :param slug: The slug of this VoiceLibrary.  # noqa: E501
        :type: str
        """

        self._slug = slug

    @property
    def name(self):
        """Gets the name of this VoiceLibrary.  # noqa: E501

        The name of the voice.  # noqa: E501

        :return: The name of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VoiceLibrary.

        The name of the voice.  # noqa: E501

        :param name: The name of this VoiceLibrary.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def language(self):
        """Gets the language of this VoiceLibrary.  # noqa: E501

        The language of the voice.  # noqa: E501

        :return: The language of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this VoiceLibrary.

        The language of the voice.  # noqa: E501

        :param language: The language of this VoiceLibrary.  # noqa: E501
        :type: str
        """

        self._language = language

    @property
    def language_code(self):
        """Gets the language_code of this VoiceLibrary.  # noqa: E501

        The language code of the voice.  # noqa: E501

        :return: The language_code of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this VoiceLibrary.

        The language code of the voice.  # noqa: E501

        :param language_code: The language_code of this VoiceLibrary.  # noqa: E501
        :type: str
        """

        self._language_code = language_code

    @property
    def model(self):
        """Gets the model of this VoiceLibrary.  # noqa: E501

        The model of the voice.  # noqa: E501

        :return: The model of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this VoiceLibrary.

        The model of the voice.  # noqa: E501

        :param model: The model of this VoiceLibrary.  # noqa: E501
        :type: str
        """

        self._model = model

    @property
    def supported_models(self):
        """Gets the supported_models of this VoiceLibrary.  # noqa: E501

        The supported models of the voice.  # noqa: E501

        :return: The supported_models of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._supported_models

    @supported_models.setter
    def supported_models(self, supported_models):
        """Sets the supported_models of this VoiceLibrary.

        The supported models of the voice.  # noqa: E501

        :param supported_models: The supported_models of this VoiceLibrary.  # noqa: E501
        :type: str
        """

        self._supported_models = supported_models

    @property
    def gender(self):
        """Gets the gender of this VoiceLibrary.  # noqa: E501

        The gender of the voice.  # noqa: E501

        :return: The gender of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this VoiceLibrary.

        The gender of the voice.  # noqa: E501

        :param gender: The gender of this VoiceLibrary.  # noqa: E501
        :type: str
        """
        allowed_values = ["male", "female"]  # noqa: E501
        if gender not in allowed_values:
            raise ValueError(
                "Invalid value for `gender` ({0}), must be one of {1}"  # noqa: E501
                .format(gender, allowed_values)
            )

        self._gender = gender

    @property
    def accent(self):
        """Gets the accent of this VoiceLibrary.  # noqa: E501

        The accent of the voice.  # noqa: E501

        :return: The accent of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._accent

    @accent.setter
    def accent(self, accent):
        """Sets the accent of this VoiceLibrary.

        The accent of the voice.  # noqa: E501

        :param accent: The accent of this VoiceLibrary.  # noqa: E501
        :type: str
        """

        self._accent = accent

    @property
    def preview_url(self):
        """Gets the preview_url of this VoiceLibrary.  # noqa: E501

        The preview URL of the voice.  # noqa: E501

        :return: The preview_url of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._preview_url

    @preview_url.setter
    def preview_url(self, preview_url):
        """Sets the preview_url of this VoiceLibrary.

        The preview URL of the voice.  # noqa: E501

        :param preview_url: The preview_url of this VoiceLibrary.  # noqa: E501
        :type: str
        """

        self._preview_url = preview_url

    @property
    def description(self):
        """Gets the description of this VoiceLibrary.  # noqa: E501

        The description of the voice.  # noqa: E501

        :return: The description of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this VoiceLibrary.

        The description of the voice.  # noqa: E501

        :param description: The description of this VoiceLibrary.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def credential_id(self):
        """Gets the credential_id of this VoiceLibrary.  # noqa: E501

        The credential ID of the voice.  # noqa: E501

        :return: The credential_id of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._credential_id

    @credential_id.setter
    def credential_id(self, credential_id):
        """Sets the credential_id of this VoiceLibrary.

        The credential ID of the voice.  # noqa: E501

        :param credential_id: The credential_id of this VoiceLibrary.  # noqa: E501
        :type: str
        """

        self._credential_id = credential_id

    @property
    def id(self):
        """Gets the id of this VoiceLibrary.  # noqa: E501

        The unique identifier for the voice library.  # noqa: E501

        :return: The id of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VoiceLibrary.

        The unique identifier for the voice library.  # noqa: E501

        :param id: The id of this VoiceLibrary.  # noqa: E501
        :type: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def org_id(self):
        """Gets the org_id of this VoiceLibrary.  # noqa: E501

        The unique identifier for the organization that this voice library belongs to.  # noqa: E501

        :return: The org_id of this VoiceLibrary.  # noqa: E501
        :rtype: str
        """
        return self._org_id

    @org_id.setter
    def org_id(self, org_id):
        """Sets the org_id of this VoiceLibrary.

        The unique identifier for the organization that this voice library belongs to.  # noqa: E501

        :param org_id: The org_id of this VoiceLibrary.  # noqa: E501
        :type: str
        """
        if org_id is None:
            raise ValueError("Invalid value for `org_id`, must not be `None`")  # noqa: E501

        self._org_id = org_id

    @property
    def is_public(self):
        """Gets the is_public of this VoiceLibrary.  # noqa: E501

        The Public voice is shared accross all the organizations.  # noqa: E501

        :return: The is_public of this VoiceLibrary.  # noqa: E501
        :rtype: bool
        """
        return self._is_public

    @is_public.setter
    def is_public(self, is_public):
        """Sets the is_public of this VoiceLibrary.

        The Public voice is shared accross all the organizations.  # noqa: E501

        :param is_public: The is_public of this VoiceLibrary.  # noqa: E501
        :type: bool
        """
        if is_public is None:
            raise ValueError("Invalid value for `is_public`, must not be `None`")  # noqa: E501

        self._is_public = is_public

    @property
    def is_deleted(self):
        """Gets the is_deleted of this VoiceLibrary.  # noqa: E501

        The deletion status of the voice.  # noqa: E501

        :return: The is_deleted of this VoiceLibrary.  # noqa: E501
        :rtype: bool
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted):
        """Sets the is_deleted of this VoiceLibrary.

        The deletion status of the voice.  # noqa: E501

        :param is_deleted: The is_deleted of this VoiceLibrary.  # noqa: E501
        :type: bool
        """
        if is_deleted is None:
            raise ValueError("Invalid value for `is_deleted`, must not be `None`")  # noqa: E501

        self._is_deleted = is_deleted

    @property
    def created_at(self):
        """Gets the created_at of this VoiceLibrary.  # noqa: E501

        The ISO 8601 date-time string of when the voice library was created.  # noqa: E501

        :return: The created_at of this VoiceLibrary.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this VoiceLibrary.

        The ISO 8601 date-time string of when the voice library was created.  # noqa: E501

        :param created_at: The created_at of this VoiceLibrary.  # noqa: E501
        :type: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")  # noqa: E501

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this VoiceLibrary.  # noqa: E501

        The ISO 8601 date-time string of when the voice library was last updated.  # noqa: E501

        :return: The updated_at of this VoiceLibrary.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this VoiceLibrary.

        The ISO 8601 date-time string of when the voice library was last updated.  # noqa: E501

        :param updated_at: The updated_at of this VoiceLibrary.  # noqa: E501
        :type: datetime
        """
        if updated_at is None:
            raise ValueError("Invalid value for `updated_at`, must not be `None`")  # noqa: E501

        self._updated_at = updated_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(VoiceLibrary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VoiceLibrary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
